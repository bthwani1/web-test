openapi: 3.0.3
info:
  title: Rahla Store API
  description: |
    ## متجر رحلة الإلكتروني - واجهة برمجة التطبيقات
    
    واجهة برمجة التطبيقات الشاملة لمتجر رحلة الإلكتروني، توفر جميع العمليات المطلوبة لإدارة المنتجات والمستخدمين والطلبات.
    
    ### المميزات الرئيسية:
    - 🔐 نظام مصادقة متقدم مع JWT
    - 🛡️ أمان شامل مع RBAC
    - 📊 مراقبة ومراجعة العمليات
    - 🌐 دعم متعدد اللغات
    - 📱 دعم PWA
    
    ### معدلات الاستخدام:
    - **الحد الأقصى**: 100 طلب في 15 دقيقة
    - **الحد الأقصى للرفع**: 10MB لكل طلب
  version: 1.0.0
  contact:
    name: Rahla Team
    email: support@rahla.com
    url: https://rahla.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.rahla.com
    description: خادم الإنتاج
  - url: https://staging-api.rahla.com
    description: خادم التطوير
  - url: http://localhost:3000
    description: خادم التطوير المحلي

security:
  - bearerAuth: []
  - apiKey: []

paths:
  /health:
    get:
      tags:
        - System
      summary: فحص صحة النظام
      description: التحقق من حالة النظام والخدمات
      security: []
      responses:
        '200':
          description: النظام يعمل بشكل طبيعي
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  timestamp:
                    type: string
                    format: date-time
                  environment:
                    type: string
                    example: "production"

  /auth/login:
    post:
      tags:
        - Authentication
      summary: تسجيل الدخول
      description: تسجيل دخول المستخدم باستخدام البريد الإلكتروني وكلمة المرور
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "user@example.com"
                password:
                  type: string
                  format: password
                  example: "password123"
      responses:
        '200':
          description: تسجيل دخول ناجح
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: بيانات اعتماد غير صحيحة
        '429':
          description: عدد الطلبات تجاوز الحد المسموح

  /auth/register:
    post:
      tags:
        - Authentication
      summary: تسجيل مستخدم جديد
      description: إنشاء حساب مستخدم جديد
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: "أحمد محمد"
                email:
                  type: string
                  format: email
                  example: "ahmed@example.com"
                password:
                  type: string
                  format: password
                  example: "password123"
                role:
                  type: string
                  enum: [user, admin]
                  default: user
      responses:
        '201':
          description: تم إنشاء الحساب بنجاح
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "تم إنشاء الحساب بنجاح"
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: بيانات غير صحيحة
        '409':
          description: البريد الإلكتروني مستخدم مسبقاً

  /auth/register-initial:
    post:
      tags:
        - Authentication
      summary: تسجيل المدير الأول
      description: إنشاء حساب المدير الأول للنظام (للاستخدام الأولي فقط)
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: "مدير النظام"
                email:
                  type: string
                  format: email
                  example: "admin@rahla.com"
                password:
                  type: string
                  format: password
                  example: "admin123"
      responses:
        '201':
          description: تم إنشاء حساب المدير بنجاح
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "تم إنشاء حساب المدير بنجاح"
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: بيانات غير صحيحة
        '409':
          description: المدير موجود مسبقاً
        '500':
          description: خطأ في الخادم

  /products:
    get:
      tags:
        - Products
      summary: قائمة المنتجات
      description: الحصول على قائمة جميع المنتجات مع إمكانية التصفية والترتيب
      parameters:
        - name: page
          in: query
          description: رقم الصفحة
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: عدد المنتجات في الصفحة
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: category
          in: query
          description: تصفية حسب الفئة
          schema:
            type: string
        - name: search
          in: query
          description: البحث في المنتجات
          schema:
            type: string
        - name: sort
          in: query
          description: ترتيب النتائج
          schema:
            type: string
            enum: [name, price, created_at]
            default: created_at
        - name: order
          in: query
          description: اتجاه الترتيب
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: قائمة المنتجات
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: معاملات غير صحيحة

    post:
      tags:
        - Products
      summary: إضافة منتج جديد
      description: إضافة منتج جديد (يتطلب صلاحيات إدارية)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: تم إنشاء المنتج بنجاح
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: بيانات المنتج غير صحيحة
        '401':
          description: غير مصرح بالوصول
        '403':
          description: لا توجد صلاحيات كافية

  /products/{id}:
    get:
      tags:
        - Products
      summary: تفاصيل منتج
      description: الحصول على تفاصيل منتج محدد
      parameters:
        - name: id
          in: path
          required: true
          description: معرف المنتج
          schema:
            type: string
      responses:
        '200':
          description: تفاصيل المنتج
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: المنتج غير موجود

    put:
      tags:
        - Products
      summary: تحديث منتج
      description: تحديث منتج موجود (يتطلب صلاحيات إدارية)
      parameters:
        - name: id
          in: path
          required: true
          description: معرف المنتج
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: تم تحديث المنتج بنجاح
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: بيانات غير صحيحة
        '401':
          description: غير مصرح بالوصول
        '403':
          description: لا توجد صلاحيات كافية
        '404':
          description: المنتج غير موجود

    delete:
      tags:
        - Products
      summary: حذف منتج
      description: حذف منتج (يتطلب صلاحيات إدارية)
      parameters:
        - name: id
          in: path
          required: true
          description: معرف المنتج
          schema:
            type: string
      responses:
        '204':
          description: تم حذف المنتج بنجاح
        '401':
          description: غير مصرح بالوصول
        '403':
          description: لا توجد صلاحيات كافية
        '404':
          description: المنتج غير موجود

  /categories:
    get:
      tags:
        - Categories
      summary: قائمة الفئات
      description: الحصول على قائمة جميع فئات المنتجات
      responses:
        '200':
          description: قائمة الفئات
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

    post:
      tags:
        - Categories
      summary: إضافة فئة جديدة
      description: إضافة فئة منتجات جديدة (يتطلب صلاحيات إدارية)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                name:
                  type: string
                  example: "إلكترونيات"
                description:
                  type: string
                  example: "جميع الأجهزة الإلكترونية"
                image:
                  type: string
                  format: uri
                  example: "https://example.com/category.jpg"
      responses:
        '201':
          description: تم إنشاء الفئة بنجاح
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: بيانات غير صحيحة
        '401':
          description: غير مصرح بالوصول
        '403':
          description: لا توجد صلاحيات كافية

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        استخدم JWT token في رأس Authorization.
        مثال: `Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...`
    
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: مفتاح API للوصول إلى الخدمات

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "507f1f77bcf86cd799439011"
        name:
          type: string
          example: "أحمد محمد"
        email:
          type: string
          format: email
          example: "ahmed@example.com"
        role:
          type: string
          enum: [user, admin]
          example: "user"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Product:
      type: object
      properties:
        id:
          type: string
          example: "507f1f77bcf86cd799439011"
        name:
          type: string
          example: "هاتف ذكي"
        description:
          type: string
          example: "هاتف ذكي بمواصفات عالية"
        price:
          type: number
          format: float
          example: 1500.50
        category:
          $ref: '#/components/schemas/Category'
        images:
          type: array
          items:
            type: string
            format: uri
          example: ["https://example.com/image1.jpg", "https://example.com/image2.jpg"]
        stock:
          type: integer
          minimum: 0
          example: 100
        isActive:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ProductInput:
      type: object
      required:
        - name
        - price
        - categoryId
      properties:
        name:
          type: string
          example: "هاتف ذكي"
        description:
          type: string
          example: "هاتف ذكي بمواصفات عالية"
        price:
          type: number
          format: float
          example: 1500.50
        categoryId:
          type: string
          example: "507f1f77bcf86cd799439011"
        images:
          type: array
          items:
            type: string
            format: uri
          example: ["https://example.com/image1.jpg"]
        stock:
          type: integer
          minimum: 0
          example: 100
        isActive:
          type: boolean
          default: true

    Category:
      type: object
      properties:
        id:
          type: string
          example: "507f1f77bcf86cd799439011"
        name:
          type: string
          example: "إلكترونيات"
        description:
          type: string
          example: "جميع الأجهزة الإلكترونية"
        image:
          type: string
          format: uri
          example: "https://example.com/category.jpg"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Pagination:
      type: object
      properties:
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 20
        total:
          type: integer
          example: 150
        pages:
          type: integer
          example: 8
        hasNext:
          type: boolean
          example: true
        hasPrev:
          type: boolean
          example: false

    Error:
      type: object
      properties:
        message:
          type: string
          example: "حدث خطأ في الخادم"
        code:
          type: string
          example: "INTERNAL_ERROR"
        details:
          type: object
          description: تفاصيل إضافية عن الخطأ

tags:
  - name: System
    description: عمليات النظام والصحة
  - name: Authentication
    description: عمليات المصادقة والتسجيل
  - name: Products
    description: إدارة المنتجات
  - name: Categories
    description: إدارة فئات المنتجات
  - name: Media
    description: إدارة الملفات والصور